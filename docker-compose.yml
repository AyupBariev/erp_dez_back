version: '3.8'
#Перед первым запуском создать тома вручную
#docker volume create mysql_data
#docker volume create redis_data
services:
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  erp-app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      - APP_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}

      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRE=${JWT_EXPIRE}

      - REDIS_DB=${REDIS_DB}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}

      - DEFAULT_ADMIN_USERNAME=${DEFAULT_ADMIN_USERNAME}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
      - DEFAULT_ADMIN_NAME=${DEFAULT_ADMIN_NAME}

      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELPHIN_API_KEY=
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ../front
      dockerfile: Dockerfile
    container_name: erp-frontend
    restart: unless-stopped
    ports:
      - "4200:3000"
    depends_on:
      - erp-app

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DEFAULT_AUTHENTICATION_PLUGIN=caching_sha2_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql

    ports:
      - "3307:3306"

    restart: unless-stopped

volumes:
   mysql_data:
      external: true
   redis_data:
      external: true
